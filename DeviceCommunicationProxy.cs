//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XDMExpress.Process.DeviceCommunicationProxy
{
    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    // 
    // This source code was auto-generated by wsdl, Version=4.0.30319.1.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_DeviceServiceInterface", Namespace="http://www.xerox.com/gt/100/")]
    public partial class BasicHttpBinding_DeviceServiceInterface : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback RemoteCommandAsyncOperationCompleted;

        /// <remarks/>
        public BasicHttpBinding_DeviceServiceInterface()
        {
        }

        /// <remarks/>
        public event RemoteCommandAsyncCompletedEventHandler RemoteCommandAsyncCompleted;

        /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xerox.com/gt/100/:remoteCommandAsyncIn", RequestNamespace="http://www.xerox.com/gt/100/", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void RemoteCommandAsync(RemoteCommandInstanceType RemoteCommandPackage) {
        this.Invoke("RemoteCommandAsync", new object[] {
                    RemoteCommandPackage});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginRemoteCommandAsync(RemoteCommandInstanceType RemoteCommandPackage, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("RemoteCommandAsync", new object[] {
                    RemoteCommandPackage}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndRemoteCommandAsync(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void RemoteCommandAsyncAsync(RemoteCommandInstanceType RemoteCommandPackage) {
        this.RemoteCommandAsyncAsync(RemoteCommandPackage, null);
    }
    
    /// <remarks/>
    public void RemoteCommandAsyncAsync(RemoteCommandInstanceType RemoteCommandPackage, object userState) {
        if ((this.RemoteCommandAsyncOperationCompleted == null)) {
            this.RemoteCommandAsyncOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoteCommandAsyncOperationCompleted);
        }
        this.InvokeAsync("RemoteCommandAsync", new object[] {
                    RemoteCommandPackage}, this.RemoteCommandAsyncOperationCompleted, userState);
    }
    
    private void OnRemoteCommandAsyncOperationCompleted(object arg) {
        if ((this.RemoteCommandAsyncCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.RemoteCommandAsyncCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xerox.com/gt/100/")]
public partial class RemoteCommandInstanceType {
    
    private string idField;
    
    private string instanceIDField;
    
    private ParameterInstanceType[] inputParametersField;
    
    /// <remarks/>
    public string ID {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public string InstanceID {
        get {
            return this.instanceIDField;
        }
        set {
            this.instanceIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlArrayItemAttribute("ParameterInstance", IsNullable=false)]
    public ParameterInstanceType[] InputParameters {
        get {
            return this.inputParametersField;
        }
        set {
            this.inputParametersField = value;
        }
    }
}

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.xerox.com/gt/100/")]
    public partial class ParameterInstanceType
    {

        private string nameField;

        private string valueField;

        /// <remarks/>
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void RemoteCommandAsyncCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}